{
  "name": "spin2",
  "displayName": "Spin2",
  "description": "Spin2/Pasm2 Syntax/Semantic Highlighting w/Code Outline and Custom tabbing support",
  "icon": "images/Propeller.ico",
  "version": "1.9.1",
  "publisher": "IronSheepProductionsLLC",
  "repository": {
    "type": "git",
    "url": "https://github.com/ironsheep/P2-vscode-extensions"
  },
  "bugs": {
    "url": "https://github.com/ironsheep/P2-vscode-extensions/issues"
  },
  "author": "IronSheep",
  "galleryBanner": {
    "color": "#003060",
    "theme": "dark"
  },
  "preview": true,
  "keywords": [
    "spin",
    "spin2",
    "pasm",
    "pasm2",
    "propeller",
    "propeller 2",
    "propeller v2",
    "parallax"
  ],
  "license": "MIT",
  "main": "out/spin2.extension.js",
  "activationEvents": [
    "onLanguage:spin2",
    "onLanguage:spin",
    "onStartupFinished"
  ],
  "engines": {
    "vscode": "^1.59.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "contributes": {
    "themes": [
      {
        "label": "Spin2 Ironsheep Dark",
        "uiTheme": "vs-dark",
        "path": "./themes/isp-spin-theme.json"
      },
      {
        "label": "Spin2 Ironsheep Syntax",
        "uiTheme": "vs-dark",
        "path": "./themes/isp-spin-syntax-theme.json"
      }
    ],
    "grammars": [
      {
        "language": "spin2",
        "scopeName": "source.spin2",
        "path": "syntaxes/spin2.tmLanguage.json"
      },
      {
        "language": "spin",
        "scopeName": "source.spin",
        "path": "syntaxes/spin1.tmLanguage.json"
      }
    ],
    "languages": [
      {
        "id": "spin2",
        "aliases": [
          "spin2",
          "Spin2",
          "SPIN2"
        ],
        "extensions": [
          ".spin2"
        ],
        "configuration": "./spin2.language-configuration.json"
      },
      {
        "id": "spin",
        "aliases": [
          "spin",
          "Spin",
          "SPIN"
        ],
        "extensions": [
          ".spin"
        ],
        "configuration": "./spin1.language-configuration.json"
      }
    ],
    "semanticTokenTypes": [
      {
        "id": "returnValue",
        "superType": "parameter",
        "description": "A parameter type of returnValue."
      },
      {
        "id": "storageType",
        "superType": "type",
        "description": "A built-in storage type"
      },
      {
        "id": "displayType",
        "superType": "enumMember",
        "description": "A built-in type of debug display"
      },
      {
        "id": "displayName",
        "superType": "label",
        "description": "user name for debug display"
      },
      {
        "id": "setupParameter",
        "superType": "parameter",
        "description": "A built-in debug display intantiation parameter name"
      },
      {
        "id": "feedParameter",
        "superType": "parameter",
        "description": "A built-in debug display feed parameter name"
      },
      {
        "id": "colorName",
        "superType": "enumMember",
        "description": "A built-in debug display color name"
      }
    ],
    "semanticTokenModifiers": [
      {
        "id": "local",
        "description": "Annotates a symbol that is declared local to a method"
      },
      {
        "id": "instance",
        "description": "Annotates a variable unique to an instance"
      },
      {
        "id": "missingDeclaration",
        "description": "Annotates a variable but no declaration found!"
      },
      {
        "id": "illegalUse",
        "description": "Idenitifes keywords where they shouldn't be!"
      }
    ],
    "semanticTokenScopes": [
      {
        "scopes": {
          "returnValue": [
            "meta.returntype.spin"
          ],
          "storageType": [
            "storage.type.pasm.spin2"
          ]
        }
      }
    ],
    "configuration": [
      {
        "title": "Spin2 Extension Behaviors",
        "properties": {
          "spinExtensionBehavior.highlightFlexspinDirectives": {
            "type": "boolean",
            "default": false,
            "description": "Enable recognition/validation of flexspin preprocessor directives."
          }
        }
      },
      {
        "title": "Spin2 Tabstops",
        "properties": {
          "spinElasticTabstops.enable": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable Spin2 Tabstops."
          },
          "spinElasticTabstops.choice": {
            "type": "string",
            "default": "PropellerTool",
            "enum": [
              "PropellerTool",
              "IronSheep",
              "User1"
            ],
            "description": "Select desired set of Tabstops"
          },
          "spinElasticTabstops.blocks.PropellerTool": {
            "type": "object",
            "properties": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "default": {
              "con": {
                "tabStops": [
                  2,
                  8,
                  16,
                  18,
                  32,
                  56,
                  78,
                  80
                ]
              },
              "var": {
                "tabStops": [
                  2,
                  8,
                  22,
                  32,
                  56,
                  80
                ]
              },
              "obj": {
                "tabStops": [
                  2,
                  8,
                  16,
                  18,
                  32,
                  56,
                  80
                ]
              },
              "pub": {
                "tabStops": [
                  2,
                  4,
                  6,
                  8,
                  10,
                  12,
                  14,
                  16,
                  32,
                  56,
                  80
                ]
              },
              "pri": {
                "tabStops": [
                  2,
                  4,
                  6,
                  8,
                  10,
                  12,
                  14,
                  16,
                  32,
                  56,
                  80
                ]
              },
              "dat": {
                "tabStops": [
                  8,
                  14,
                  24,
                  32,
                  48,
                  56,
                  80
                ]
              }
            }
          },
          "spinElasticTabstops.blocks.IronSheep": {
            "type": "object",
            "properties": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "default": {
              "con": {
                "tabStops": [
                  4,
                  8,
                  16,
                  20,
                  32,
                  44,
                  56,
                  68,
                  80
                ]
              },
              "var": {
                "tabStops": [
                  4,
                  12,
                  24,
                  28,
                  32,
                  44,
                  56,
                  68,
                  80
                ]
              },
              "obj": {
                "tabStops": [
                  4,
                  8,
                  16,
                  20,
                  32,
                  44,
                  56,
                  68,
                  80
                ]
              },
              "pub": {
                "tabStops": [
                  4,
                  8,
                  12,
                  16,
                  20,
                  24,
                  28,
                  32,
                  56,
                  80
                ]
              },
              "pri": {
                "tabStops": [
                  4,
                  8,
                  12,
                  16,
                  20,
                  24,
                  28,
                  32,
                  56,
                  80
                ]
              },
              "dat": {
                "tabStops": [
                  4,
                  16,
                  20,
                  24,
                  28,
                  48,
                  52,
                  56,
                  60,
                  64,
                  68,
                  80
                ]
              }
            }
          },
          "spinElasticTabstops.blocks.User1": {
            "type": "object",
            "properties": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "default": {
              "con": {
                "tabStops": [
                  2,
                  8,
                  16,
                  18,
                  32,
                  56,
                  76,
                  77,
                  78,
                  80
                ]
              },
              "var": {
                "tabStops": [
                  2,
                  8,
                  22,
                  32,
                  56,
                  80
                ]
              },
              "obj": {
                "tabStops": [
                  2,
                  8,
                  16,
                  18,
                  32,
                  56,
                  80
                ]
              },
              "pub": {
                "tabStops": [
                  2,
                  4,
                  6,
                  8,
                  10,
                  12,
                  14,
                  16,
                  32,
                  56,
                  80
                ]
              },
              "pri": {
                "tabStops": [
                  2,
                  4,
                  6,
                  8,
                  10,
                  12,
                  14,
                  16,
                  32,
                  56,
                  80
                ]
              },
              "dat": {
                "tabStops": [
                  8,
                  14,
                  24,
                  32,
                  48,
                  56,
                  80
                ]
              }
            }
          }
        }
      },
      {
        "title": "Spin2 Insert Mode Configuration",
        "properties": {
          "spinInsertMode.overtypePaste": {
            "type": "boolean",
            "default": false,
            "description": "Enable use of overtype behavior when pasting text while in \"Overtype\" Mode."
          },
          "spinInsertMode.perEditor": {
            "type": "boolean",
            "default": false,
            "description": "Enable the setting of insert/overtype/align mode \"per editor\"."
          },
          "spinInsertMode.enableAlign": {
            "type": "boolean",
            "default": true,
            "description": "Enable \"Align\" Mode."
          },
          "spinInsertMode.secondaryCursorStyle": {
            "type": "string",
            "default": "block",
            "enum": [
              "line",
              "line-thin",
              "block",
              "block-outline",
              "underline",
              "underline-thin"
            ],
            "description": "Sets the \"Overtype\" Mode cursor style."
          },
          "spinInsertMode.ternaryCursorStyle": {
            "type": "string",
            "default": "underline",
            "enum": [
              "line",
              "line-thin",
              "block",
              "block-outline",
              "underline",
              "underline-thin"
            ],
            "description": "Sets the \"Align\" Mode cursor style."
          },
          "spinInsertMode.labelInsertMode": {
            "type": "string",
            "default": "Insert",
            "description": "Label text in the status bar shown during \"Insert\" Mode, may be empty to hide the status."
          },
          "spinInsertMode.labelOvertypeMode": {
            "type": "string",
            "default": "Overtype",
            "description": "Label text in the status bar shown during \"Overtype\" Mode, may be empty."
          },
          "spinInsertMode.labelAlignMode": {
            "type": "string",
            "default": "Align",
            "description": "Label text in the status bar shown during \"Align\" Mode, may be empty."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "spin2.generate.documentation.file",
        "title": "Spin2: Generate documentation file from spin source"
      },
      {
        "command": "spin2.indentTabStop",
        "title": "Spin2: Indent tab stop"
      },
      {
        "command": "spin2.outdentTabStop",
        "title": "Spin2: Outdent tab stop"
      },
      {
        "command": "spin2.insertTabStopsComment",
        "title": "Spin2: Insert tab stop comment"
      },
      {
        "command": "spin2.insertMode.rotate",
        "title": "Spin2: Rotate through modes: Insert - Overtype - Align"
      },
      {
        "command": "spin2.insertMode.toggle",
        "title": "Spin2: Toggle between modes: Insert - Align"
      },
      {
        "command": "spin2.insertMode.deleteLeft",
        "title": "Spin2: Align mode Delete Left"
      },
      {
        "command": "spin2.insertMode.deleteRight",
        "title": "Spin2: Align mode Delete Right"
      },
      {
        "command": "objectDependencies.refreshEntry",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "objectDependencies.activateFile",
        "title": "Open File for this element",
        "icon": "$(open-preview)"
      },
      {
        "command": "objectDependencies.expandAll",
        "title": "Expand All",
        "icon": "$(expand-all)"
      },
      {
        "command": "objectDependencies.collapseAll",
        "title": "Collapse All",
        "icon": "$(expand-all)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "objectDependencies.refreshEntry",
          "when": "view == objectDependencies",
          "group": "navigation@2"
        },
        {
          "command": "objectDependencies.expandAll",
          "when": "view == objectDependencies && spin2.objectDeps.expanded == false",
          "group": "navigation@1"
        },
        {
          "command": "objectDependencies.collapseAll",
          "when": "view == objectDependencies && spin2.objectDeps.expanded == true",
          "group": "navigation@1"
        }
      ]
    },
    "keybindings": [
      {
        "key": "Ctrl+Alt+d",
        "command": "spin2.generate.documentation.file",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && !editorTabMovesFocus && editorLangId == spin2"
      },
      {
        "key": "Ctrl+Alt+d",
        "command": "spin2.generate.documentation.file",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && !editorTabMovesFocus && editorLangId == spin"
      },
      {
        "key": "tab",
        "command": "spin2.indentTabStop",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && !editorTabMovesFocus && editorLangId == spin2 && config.spinElasticTabstops.enable"
      },
      {
        "key": "tab",
        "command": "spin2.indentTabStop",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && !editorTabMovesFocus && editorLangId == spin && config.spinElasticTabstops.enable"
      },
      {
        "key": "Shift+tab",
        "command": "spin2.outdentTabStop",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && editorLangId == spin2 && config.spinElasticTabstops.enable"
      },
      {
        "key": "Shift+tab",
        "command": "spin2.outdentTabStop",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && editorLangId == spin && config.spinElasticTabstops.enable"
      },
      {
        "key": "Ctrl+Alt+tab",
        "command": "spin2.insertTabStopsComment",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && editorLangId == spin2 && config.spinElasticTabstops.enable"
      },
      {
        "key": "Ctrl+Alt+tab",
        "command": "spin2.insertTabStopsComment",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && editorLangId == spin && config.spinElasticTabstops.enable"
      },
      {
        "command": "spin2.insertMode.rotate",
        "key": "insert",
        "when": "editorFocus && editorLangId == spin2"
      },
      {
        "command": "spin2.insertMode.rotate",
        "key": "insert",
        "when": "editorFocus && editorLangId == spin"
      },
      {
        "command": "spin2.insertMode.rotate",
        "key": "F11",
        "when": "editorFocus && editorLangId == spin2"
      },
      {
        "command": "spin2.insertMode.rotate",
        "key": "F11",
        "when": "editorFocus && editorLangId == spin"
      },
      {
        "command": "spin2.insertMode.deleteLeft",
        "key": "backspace",
        "when": "editorTextFocus && !editorReadonly&& editorLangId == spin2 && config.spinElasticTabstops.enable"
      },
      {
        "command": "spin2.insertMode.deleteLeft",
        "key": "backspace",
        "when": "editorTextFocus && !editorReadonly&& editorLangId == spin && config.spinElasticTabstops.enable"
      },
      {
        "command": "spin2.insertMode.deleteRight",
        "key": "delete",
        "when": "editorTextFocus && !editorReadonly && editorLangId == spin2 && config.spinElasticTabstops.enable"
      },
      {
        "command": "spin2.insertMode.deleteRight",
        "key": "delete",
        "when": "editorTextFocus && !editorReadonly && editorLangId == spin && config.spinElasticTabstops.enable"
      },
      {
        "command": "spin2.insertMode.toggle",
        "key": "Ctrl+Shift+i",
        "mac": "Cmd+Shift+i",
        "when": "editorFocus && editorLangId == spin2"
      },
      {
        "command": "spin2.insertMode.toggle",
        "key": "Ctrl+Shift+i",
        "mac": "Cmd+Shift+i",
        "when": "editorFocus && editorLangId == spin"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "objectDependencies",
          "name": "Object Dependencies",
          "icon": "$(type-hierarchy)",
          "contextualTitle": "Propeller Spin2 Development",
          "when": "spin2.objectDeps.enabled"
        }
      ]
    },
    "contributes": {
      "viewsWelcome": [
        {
          "view": "objectDependencies",
          "contents": "The active editor connot provide Spin2 object dependencies."
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run compile:grammar",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "compile:grammar": "npx js-yaml syntaxes/spin2.tmLanguage.YAML-tmLanguage > syntaxes/spin2.tmLanguage.json && npx js-yaml syntaxes/spin1.tmLanguage.YAML-tmLanguage > syntaxes/spin1.tmLanguage.json "
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.59.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "js-yaml": "^3.14.0",
    "lodash": ">=4.17.19",
    "mocha": "^8.4.0",
    "mocha-explorer-launcher-scripts": "^0.3.0",
    "source-map-support": "^0.5.19",
    "typescript": "^4.3.2",
    "vscode-test": "^1.5.2",
    "vsce": "^1.85.0",
    "@vscode/codicons": "0.0.20"
  },
  "dependencies": {}
}
